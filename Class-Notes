Allright, this is probably wrong but it's the only place I've found where I can write at will to take notes, so that will be it.
I will be taking notes here to see if it will work.

04/05/2021 - I'm currently on studying Programming Logic with  UNIVESP, a free course from a Brazilian plataform with its roots at UNESP University (I guess)
   	I'm starting today UNIDADE 3 and will be taking notes from this point forward
    
3 - Estruturas de decisão (Decision Structures)
    
    estruturas condicionais Se.., Senão.. e Fim-se
	Following that there are  drawn examples of flowcharts:
	
	Decision structure in JAVA used the command IF
		------------------------------
		Pseudocode	 about verifying the average grade for a student and cheking if his average grade is >=7 (true=approved; false=notApproved)
			SE (condição) Então
				{comando(s)}
			Fim-Se
    	------------------------------
		JAVA
			if (condição){
				{comando(s)};
			}
		------------------------------
		Pseudocode	about verifying if a person is a minor or an adult (if the age is >=18 true=adult; false=minor)
			SE (idade >=18) Então
				Escreva (“Maior de idade”)
			Fim-Se
		------------------------------
		JAVA
		if (idade >=18){
   			JOptionPane.showMessageDialog(null,
		“Maior de idade”);
		}
		------------------------------
	
	O comando condicional SE testa a condição idade >=18. Ou seja, se a idade for maior ou igual a 18 anos ENTÃO a condição é verdadeira (segue-se o caminho “sim”).
	Desse modo, será executado o comando Escreva (“Maior de idade”). Caso contrário (se a idade for menor que 18 anos), nada será feito (Fim-Se).
	TRANSLATION:
	The conditional IF tests the condition age>=18. So, if the age is equal or greater than 18 SO the condition is TRUE (follows the "YES" path).
	Being TRUE it will be executed the WRITE command ("Adult"). If the test is FALSE (age <18) then nothing will be done (endIF)
	
	Você deve ter reparado, com base na sintaxe apresentada na tabela acima, que na programação Java a palavra SE é substituída pelo if e que a palavra Então é
	substituída por { . O comando Escreva é substituído por JOptionPane.showMessageDialog e, finalmente, o Fim-Se é substituído por }.
	
	Then right after that explanation there is an example of this program written in JAVA:
	======================================================================
		import javax.swing.JOptionPane;

      public class IfSimples {

        public static void main(String[] args) {
          //declaraçao de variáveis
        int idade; // armazena a idade
        String aux; //variável auxiliar

        //entrada de dados
        aux = JOptionPane.showInputDialog('Entre com a sua idade');
        //conversão de tipos
        idade = Integer.parseInt(aux);

        //Decisão
        if (idade >=18) {
          JOptionPane.showMessageDialog(null, 'Maior de Idade');
        }//fim do if
        }//fim do main

      }//fim da classe
	======================================================================
	

	Estrutura de decisão aninhada
	Usando novamente o exemplo da verificação de maioridade, agora o curso coloca um novo IF após ser verdade que a idade é >=18.
	A primeira verificação fica sendo se é >=18. Caso seja, parte o programa para uma segunda verificação, que é se a idade é = 18.
	Se a primeira verificação inicial for FALSA, o programa já parte para a mensagem "Menor de idade", pois o teste é falso se idade <18.
	
	------------------------------
	Pseudocode
	
		SE (idade >=18) Então
    		SE (idade = 18) Então
        		Escreva (“Igual a 18”)
    		Senão
        		Escreva (“Maior de 18”)
    		Fim-Se
    		Senão
       			Escreva (“Menor de idade”)
		Fim-Se
	------------------------------
	JAVA
	
	if (idade >=18){
    		if (idade==18){
       			JOptionPane.showMessageDialog
       			(null, “igual a 18”);
    		}
    		else {
       			JOptionPane.showMessageDialog
       			(null, “Maior de 18”);
    		}
	}
	else {
    	JOptionPane.showMessageDialog
    	(null, “Menor de idade”);
	}
	------------------------------
	
E agora o "programa completo em JAVA
------------------------------------------------------------------------
import javax.swing.JOptionPane;

        public class ifAninhado {

          public static void main(String[] args) {
            //declaraçao de variáveis
            int idade; // armazena a idade
            String aux; //variável auxiliar

            //entrada de dados
            aux = JOptionPane.showInputDialog("Entre com a sua idade");
            //conversão de tipos
            idade = Integer.parseInt(aux);

            //Decisão
            if (idade >=18) { // primeiro if
              //comandos se a condição for verdadeira
              if (idade == 18) { // segundo if
                JOptionPane.showMessageDialog(null, "igual a 18");
              }else {
              JOptionPane.showMessageDialog(null, "Maior de 18");
              }//fim do segundo if
            } else {
              //comandos se a condição for falsa
              JOptionPane.showMessageDialog(null, "Menor de Idade");
            } // fim do primeiro if
          }//fim do main

        }//fim da classe
	------------------------------------------------------------------------
	
	Na sequência do curso no módulo 3 é proposto que o usuário digite um número de 1 a 7 e que um programa diga qual dia da semana este número representa (domingo = 1)
	Ou seja, os números de 1 a 7 serão uma variável de ENTRADA do tipo INTEIRO
	
	=================================================
	import javax.swing.JOptionPane;

        public class ifAninhadoSemana {

          public static void main(String[] args) {
            //declaração de variáveis
            int dia; // variável para armazenamento da semana

            //entrada de dados com conversão de tipos juntas
            dia = Integer.parseInt(JOptionPane.showInputDialog("Entre com um número de 1 a 7"));

            //processamento

            if (dia == 1) { //if 1
              JOptionPane.showMessageDialog(null, "Você escolheu Domingo");
            } else {
              if (dia == 2) { //if 2
                JOptionPane.showMessageDialog(null, "Você escolheu Segunda");
              } else {
                if (dia == 3) { //if 3
                  JOptionPane.showMessageDialog(null, "Você escolheu Terça");
                } else {
                  if (dia == 4) { //if 4
                    JOptionPane.showMessageDialog(null, "Você escolheu Quarta");
                  } else {
                    if (dia == 5) { //if 5
                      JOptionPane.showMessageDialog(null, "Você escolheu Quinta");
                    } else {
                      if (dia == 6) { //if 6
                        JOptionPane.showMessageDialog(null, "Você escolheu Sexta");
                      } else {
                        if (dia == 7) { //if 7
                          JOptionPane.showMessageDialog(null, "Você escolheu Sábado");
                        } else {
                          JOptionPane.showMessageDialog(null, "Número Inválido");
                        } // fim do if 7
                      } // fim do if 6
                    } // fim do if 5
                  } // fim do if 4
                } // fim do if 3
              } // fim do if 2
            } // fim do if 1
          } // fim do método main

        } // fim da classe
		
		=================================================
		
		Para realizarmos uma comparação de um conteúdo de uma variável com uma String – sequência de caracteres – no Java, temos que utilizar um método especial: o .equals().
		
		import javax.swing.JOptionPane;

            public class IfEquals {

              public static void main(String[] args) {
                //declaração de variáveis
                String nome;

                //entrada de dados
                nome = JOptionPane.showInputDialog("Entre com um nome");

                //Processamento e saída
                if (nome.equals("Jose")) {
                  JOptionPane.showMessageDialog(null,"O Nome Digitado é Jose");
                } else {
                  JOptionPane.showMessageDialog(null, "O nome digitado foi " + nome);
                }
              }
            }
			
=================================================
			
Ou seja, se declararmos uma variável x do tipo inteiro e usarmos uma estrutura de decisão if para verificar se x=5, usaremos if (x==5) {
Quando pedirmos pro usuário declarar uma variável "nome" do tipo String (ex.: "Digite seu nome") podemos usar a estrutura de decisão if para verificar se o "nome" digitado 
é igual ao valor de comparação 
	 if (nome.equals("Jose")) {
                  JOptionPane.showMessageDialog(null,"O Nome Digitado é Jose");
		  
	------------------------------------------------
	import javax.swing.JOptionPane;

            public class IfEquals {

              public static void main(String[] args) {
                //declaração de variáveis
                String nome;

                //entrada de dados
                nome = JOptionPane.showInputDialog("Entre com um nome");

                //Processamento e saída
                if (nome.equals("Jose")) {
                  JOptionPane.showMessageDialog(null,"O Nome Digitado é Jose");
                } else {
                  JOptionPane.showMessageDialog(null, "O nome digitado foi " + nome);
                }
              }
            }

------------------------------------------------

Estrutura de Decisão caso... senão... fim_selecione

Pseudocódigo
Selecione Caso {variável}
          Caso condição 01
              {comando(s)}
          Caso condição 02
              {comando(s)}
          Caso condição 03
              {comando(s)}
          ...
          Senão
              {comando(s)}
      Fim-Selecione

JAVA
switch (variável){
          case condição 01:
              {comando(s)};
              break;
          case condição 02:
              {comando(s)};
              break;
          case condição 03:
              {comando(s)};
              break;
          ...
          default:
              {comando(s)};
      }
      
 -------------------------------------
 
 Exemplo em JAVA do pequeno programa que diz o dia da semana baseado na variável número de 1 a 7
 
 import javax.swing.JOptionPane;

          public class caseDiaSemana {

            public static void main(String[] args) {
              //declaração de variáveis
              int dia; // variável para armazenamento da semana

              //entrada de dados com conversão de tipos juntas
              dia = Integer.parseInt(JOptionPane.showInputDialog("Entre com um número de 1 a 7"));

              //processamento

              switch (dia) {
                case 1:
                  JOptionPane.showMessageDialog(null, "Você escolheu Domingo");
                  break;
                case 2:
                  JOptionPane.showMessageDialog(null, "Você escolheu Segunda");
                  break;
                case 3:
                  JOptionPane.showMessageDialog(null, "Você escolheu Terça");
                  break;
                case 4:
                  JOptionPane.showMessageDialog(null, "Você escolheu Quarta");
                  break;
                case 5:
                  JOptionPane.showMessageDialog(null, "Você escolheu Quinta");
                  break;
                case 6:
                  JOptionPane.showMessageDialog(null, "Você escolheu Sexta");
                  break;
                case 7:
                  JOptionPane.showMessageDialog(null, "Você escolheu Sábado");
                default:
                  JOptionPane.showMessageDialog(null, "Número inválido");
                  break;
                }//fim do switch-case
            } // fim do método main
          } // fim da classe
	  
==================================================================================================================================

UNIDADE 4 

Estruturas de repetição 

----------------------------------------------------------
1. Enquanto... fim-enquanto

Pseudocódigo
	Enquanto <condição> faça
     	<Comando>
     	<Comando>
      	<Comando>
	Fim enquanto
	
JAVA
while (condição){
	instrução
}
---------------------------
Vejamos outro exemplo da estrutura Enquanto... fim-enquanto:
Nestra estrutura de repetição, primeiro são dadas as condições e depois as intruções
Elabore um Algoritmo, um Fluxograma e um Programa em Java que mostre todos os números menores que 10.
Pseudocódigo

Programa ex

  Declare
        num como inteiro
  Início
        Num <- 0
        Enquanto (num < 10) faça
              escreva num
              num <- num+1
        fim-enquanto

-----
JAVA
    public class ex01 {

            public static void main(String[]args) {
                  int num =0;
                  while (num < 10) {
                        System.out.println("Número " + num);
                        num++;
                  }
            }
          }
-----
lembrando que o incremento não é automátio e a ausência dele pode gerar um loop infinito levando ao esgotamento da memória do computador.

----------------------------------------------------------

1. Repita... até-que
Nestra estrutura de repetição, primeiro são dadas as instruções e depois as condições de repetição.

-----
Pseudocódigo

Repita <condição> faça
      <Comando>
      <Comando>
      <Comando>
até que<Comando>
-----
JAVA

do {
      instrução
}
while (condição)
-----

No exemplo mostrado anteriormente, de um programa que mostra pro usuário os números de 0 à 9, usando a estrutura de repetição "Repita... até-que" teremos:

-----
Pseudocódigo

Declare
          num como inteiro
    Início
          repita
                escreva num
                num < num + 1
          até que (num < 10)
     fim.
-----
JAVA


           public class ex01 {

            public static void main(String[]args) {
               int num =0;
               do{
                    System.out.println("Número " + num);
                    num++;
               }
               while (num < 10);
            }
        }
-----

Utilizando comandos de repetição em conjunto com comando condicional if

Nas unidades anteriores você viu que é possível utilizar o comando para (for) em conjunto com o se (if) para atingir a solução de um problema na programação. Assim, como no caso do para, também podemos usar o enquanto (while) e o repita até (do while) em conjunto com o se (if) com o mesmo propósito.

Veja o exemplo a seguir, um programa de uma empresa financeira. Nele, o usuário informa seu cargo e salário e, a partir dessas informações, o programa informa quanto de empréstimo a pessoa pode obter.

Diretor = 30%
Gerente = 25%
Operacional = 20%

import java.util.Scanner;
            public class ex03 {

                  public static void main(String[]args) {

                        String nome, cargo;
                        float sal, emprestimo=0;

                        System.out.println("Por favor informe seu nome");
                        nome = new Scanner(System.in).nextLine();
                        System.out.println("E agora informe seu cargo (Diretor, Gerente ou Operacional)");

                        cargo = new Scanner(System.in).nextLine();

                        while (cargo == "Diretor" || cargo == "Gerente" || cargo == "Operacional") {
                              System.out.println("Cargo incorreto, por favor informe o cargo novamente");
                              cargo = new scanner(System.in).nextLine();
                        }

                        System.out.println("Agora informe o seu salário");
                        sal = new scanner(System.in).nextFloat();

                        if (cargo.equals("Gerente"))
                            emprestimo = sal*25/100;
                        else if (cargo.equals("Diretor"))
                            emprestimo = sal*30/100;
                        else
                            emprestimo = sal*20/100;

                        System.out.println("Olá" + nome);
                        System.out.println("Seu cargo é" + cargo);
                        System.out.println("Seu salário é" + sal);
                        System.out.println("Olá" + nome);
                        System.out.println("E você tem direito a pegar R$" + emprestimo + "de empréstimo");
               }
           }
-------------------------------------------------




